- Current Situation:
 - I can drag a table component from the Toolbar to the canvas.
 - I also can visually select a cell in the table by clicking it with the mouse.
- New feature request:
 - When a cell gets selected show a floating "cell actions" toolbar above the selected cell, 
   containing an "edit content" (pencil) icon. Align the bottom of the toolbar with the top of the selected cell.
===============================
1-st improvement:
- Align the "cell actions" toolbar horizontally to the "middle" of the top border of the cell.
- I see the entered content being reflected in .property-textarea inside Element properties Pane. This Ok,
  but please reflect it inside the edited cell itself. Be sure to:
   - support HTML content as well.
   - preserve formatting (like white-space, newLine, etc)
===============================
2-nd improvement:
- The content now reflects inside the edited table cell, which is Ok.
- But: When I save the file (Menu/File/Save), open the downloaded file with Notepad++, I see only &nbsp; inside the cell,
  so the content I entered in the cell, is NOT saved together with the file!
===============================
3-rd Improvement:
- When saving the (X)HTML doxument, please strip ALL the following lines from the beginning of the document:
- <?xml version="1.0" encoding="UTF-8"?>
- <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
===============================
4-th Improvement:
In dropped a 2x2 table (4 cells) to the canvas. I entered in the 4 cells the following strings:
-Row1Col1: R1C1
-Row1Col2: R1C2
-Row2Col1: R2C1
-Row2Col2: R2C2
On the screen the information is correctly reflected in the appropriate cells of the dropped table, => Ok.
But: In the saved file, if I open it with Notepad++, I see the same R1C1 in all 4 cells!
=================================
Feature request: Support Cell padding and alignment:
Current Situation:
- When a Table cell is selected, it is "marked" by a blue-ish color, but on the right pane (Element Properties)
  Still the properties of the "parent table" are shown.
1-st Improvement request:
- When a Table cell is selected, the Properties Pane should display the selected cell-s own properties:
  - Padding: top, right, bottom, left (use small, compact number spinners. Default values:0mm)
  - The 4 "Padding" spinners set the Top/Right/Bottom/Left padding of the selected cell in millimeters.

- The 3 "H-Alignment"-buttons set the text-align: left/center/right of the selected cell.
- The 3 "V-Alignment"-buttons set the vertical-align: top/middle/bottom of the selected cell.
- Content alignments (text-align, vertical-align): use 2 rows of small square icons: 
- 1-st icon row for Horizontal alignments: Left, Center, Right
- 2-nd icon row for Vertical alignments: Top,Middle,Bottom
-For Content alignment buttons please use the ".ico-align_*" classes defined in: @src/app/styles/alignment-icons.less
=== Change Request: Eliminate Position: absolute ===
Why:
The produced XHTML will be processed by some rudimentary 3rd-party CSS2-engine (out of our control). This CSS2 engine
is generating PDF reports from our downloaded XHTML file. This CSS2-engine does not handle positioned elements correctly!
The requested Change:
- When placing elements to the canvas, we are NOT ALLOWED to use positioned elements anymore so, please change the 
  implementation in the following way:
- When an element (only Table for now, but we will support also others elements like <div> soon) is dropped to the 
  canvas, determine its placement as follows:
  - If it is the first element on the canvas: it can be placed whereever we want.
  - If there are already elements on the canvas: it must be "snapped" either "right-before", or "right-after" an 
    existing element, called ReferenceElement.
   - At the moment of "dropping", the distance between the new element and the reference element should be 0 by default,
     modifiable later via the "margin" properties (in property pane).
- Use only elements in the normal flow (position:static).
  Use margins for positioning.

== Change Request: Eliminate use of positioned elements ===
Why:
The produced XHTML will be processed by some rudimentary 3rd-party CSS2-engine (out of our control). This CSS2 engine
is generating PDF reports from our downloaded XHTML file. This CSS2-engine does not handle positioned elements correctly!
The requested Change:
- When placing elements to the canvas, we are NOT ALLOWED to use positioned elements anymore so, please change the 
  implementation in the following way:
- When an element (only Table for now, but we will support also others elements like <div> soon) is dropped to the 
  canvas, determine its placement as follows:
  - If it is the first element on the canvas: it can be placed whereever we want.
  - If there are already elements on the canvas: it must be "snapped" either "right-before", or "right-after" an 
    existing element, called ReferenceElement.
   - At the moment of "dropping", the distance between the new element and the reference element should be 0 by default,
     modifiable later via the "margin" properties (in property pane).
- Use only elements in the normal flow (position:static).
  Use margins for positioning.

===== Improve Quill V2 Editor Behaviour ====
Please change the toolbar config inside the file:@src/app/designer/table-element/cell-editor-dialog.ts, so that:
- "font-family"-selection dropdown: instead of the actual, generic font categories: ['Sans Serif', 'Serif', 'Monospace']
  I have the name of the most popular font families: [Arial, Helvetica, Verdana, Tahoma, Trebuchet MS, TimesNew Roman, Georgia, Roboto, Open Sans, Lato, Montserrat, Poppins];
- "font-size"-selection dropdown: instead of the actual: [Small,Normal,Large,Huge], I want to have exact font sizes in points, like [6,7,8,9,10,11,12,13,14,15,16,17,18,20,24,28,32];
- "line-height"-selection dropdown: instead of the current empty dropdown, I want to have the list of most useful values.

=== New Feture request: Zoom 1:1 ===
Currently we have 3 zoom options in the Menu/View: "Zoom to fit", "Zoom to width" and "Zoom to height".
Add a new Zoom Option: Zoom 1:1. This means, that when I place a physical A4 sheet over my screen, the 
.a4-sheet element has exactly the same width and height as my physical paper. (in other words, they perfectly cover
each other. When Using this zoom, take care to:
 - Center the page horizontally on screen
 - Scroll top, so the topmost pixels are in the viewport.

=== Add Screen Calibration Page ===
When setting the size of the canvas page (.a4-sheet in file:@src/app/designer/canvas/canvas.html) via the inline style attribute:
```
width: 210mm; height: 297mm; transform: scale(1); transform-origin: left top;
```
you must multiply the width (in our case: 210mm) and the height (in our case: 297mm) with a so-called 
scaling factor.
This scaling factor by default = 1, but it can vary depending on parameters like: display scaling, Chrome zoom, 
device-pixel-ratio, the spec’s “reference pixel”, etc.
To give the user the possibility to set the scaling factor for his/her screen, please:
- Add new option to the "View Menu" (right after the "Zoom 1:1 (Actual Size)"): "Calibrate Screen".
Based on the following sample: @src/sample-screen-calibration.html
Please implement the new Calibrate screen based on this sample file. (If you reuse this exact file, then please:
 - Rename / move it accordingly
 - Read the user comments in the file, specially at line 11.


- Fix 1: The trueSizeScale is calculated correctly, and saved to localStorage, but, it is NOT APPLIED in style attribute of .a4-sheet element!
- Fix 2: When I open "Screen Calibration Dialog": please, pre-populate the measured value (input[name="measured"]). 
  Calculate it, based on the value of trueSizeScale (for trueSizeScale = 1, it should be 50).
  previously saved to localStorage, or use the value = 50, if no trueSizeScale was saved previously.
- Fix 3: "Apply" and "Reset" buttons should NOT close the secreen calibration dialog!
- Fix 4: "Screen Calibration Dialog" should be vertically scrollable.

=== Properties Pane: Add Table Border ===
For a Table object drag/dropped to the canvas, please add to its Property Pane (right-side):
   - Border properties (under Rows,Columns section).
   - width(spinner)
   - Style(dropdown)
   - Color(color selector dialog)

=== Add new Table properties: id, role to the Properties Pane ===
For any element dropped to the canvas, please add the following 2 new properties in the Property Pane, 
right after the Type property-field:
- id: text-field, maxLength:20 characters
- role: dropdown with the following discrete values: Header;Body;Footer
For different roles, use different background colors for the selected td:
 - role="Body": background-color: td.selected hsla(217, 91%, 48%, 0.12)
 
=== Add content Editor for <div> elements ===
"Edit Cell Content" functionality is already available for <td> elements, see files:
 - @src/app/designer/table-element/table-element.html)
 - src/app/designer/table-element/table-element.ts
Please extend content editing also for <div> elements. Please reuse (as much as possible) the functioanlity
available for <td> elements.