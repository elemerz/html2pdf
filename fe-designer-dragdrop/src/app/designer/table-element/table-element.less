@import '../../../styles/theme.less';

:host {
  display: block;
  width: 100%;
  height: 100%;
}

.table-element-container {
  position: relative;
  width: 100%;
  height: 100%;
}

.element-table {
  width: 100%;
  height: 100%;
  border-collapse: collapse;
  table-layout: fixed;
  background-color: fade(@background, 60%);

  tbody {
    height: 100%;
  }

  tr {
    height: auto;
  }

  td {
    border: 1px solid fade(@foreground, 25%);
    /* padding now controlled per-cell via inline styles */
    position: relative;
    transition: background-color @transition-fast, box-shadow @transition-fast;
    user-select: none;
    /* vertical/horizontal alignment handled via inline styles */

    &.selected {
      background-color: fade(@primary, 12%);
      box-shadow: inset 0 0 0 2px fade(@primary, 40%);
    }

    .cell-content {
      width: 100%;
      height: 100%;
      box-sizing: border-box;
      white-space: pre-wrap; // preserve whitespace & newlines
      
      // Font properties are now inherited from <td> element
      // Quill-generated inline styles in content will override via higher specificity
    }
    
    .sub-table-container {
      width: 100%;
      height: 100%;
      box-sizing: border-box;
      padding: 0;
      margin: 0;
    }
    
    .sub-table {
      border-collapse: collapse;
      
      .sub-table-cell {
        position: relative;
        cursor: pointer;
        transition: all @transition-fast;
        
        // Background color is applied inline per level
        // Don't override it here
        
        &:hover {
          // Darken slightly on hover
          filter: brightness(0.95);
        }
      }
    }
  }
}

.table-resize-handle {
  position: absolute;
  z-index: 5;
  background-color: transparent;

  &.horizontal {
    left: 0;
    right: 0;
    height: 10px;
    transform: translateY(-50%);
    cursor: ns-resize;
  }

  &.vertical {
    top: 0;
    bottom: 0;
    width: 10px;
    transform: translateX(-50%);
    cursor: ew-resize;
  }

  &::after {
    content: '';
    position: absolute;
    background-color: fade(@primary, 40%);
    opacity: 0;
    transition: opacity @transition-fast;
    pointer-events: none;
  }

  &.horizontal::after {
    left: 0;
    right: 0;
    top: 50%;
    height: 2px;
    transform: translateY(-50%);
  }

  &.vertical::after {
    top: 0;
    bottom: 0;
    left: 50%;
    width: 2px;
    transform: translateX(-50%);
  }

  &:hover::after,
  &.resizing::after {
    opacity: 1;
  }
}

.cell-actions-trigger {
  position: absolute;
  width: 20px;
  height: 20px;
  padding: 0;
  background-color: @primary;
  color: @primary-foreground;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  font-size: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: @shadow-sm;
  z-index: @z-popover;
  transform: translate(-50%, 0);
  transition: all @transition-fast;
  
  &:hover {
    background-color: darken(@primary, 10%);
    transform: translate(-50%, 0) scale(1.1);
  }
}

.cell-actions-toolbar {
  position: absolute;
  transform: translate(-50%, -120%); // Lowered from -150% to bring closer to table
  display: flex;
  gap: 4px;
  background-color: @primary;
  color: @primary-foreground;
  padding: 4px 6px;
  border-radius: @radius-sm;
  box-shadow: @shadow;
  font-size: 12px;
  z-index: @z-popover;
}

.cell-action {
  background: transparent;
  border: none;
  color: inherit;
  cursor: pointer;
  padding: 4px;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color @transition-fast;
  min-width: 28px;  // Increased from 24px
  min-height: 28px; // Increased from 24px

  svg {
    display: block;
    width: 20px;      // Increased from 16px (25% larger)
    height: 20px;     // Increased from 16px (25% larger)
    flex-shrink: 0;
  }

  &:hover {
    background-color: fade(@primary-foreground, 15%);
    border-radius: @radius-sm;
  }
}
