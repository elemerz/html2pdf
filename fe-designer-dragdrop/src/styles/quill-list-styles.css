/* Make dropdown items preview their font family */
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="arial"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="arial"]::before { font-family: Arial, sans-serif; content: "Arial"; }
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="helvetica"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="helvetica"]::before { font-family: Helvetica, Arial, sans-serif; content: "Helvetica"; }
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="verdana"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="verdana"]::before { font-family: Verdana, Geneva, sans-serif; content: "Verdana"; }
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="tahoma"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="tahoma"]::before { font-family: Tahoma, Geneva, sans-serif; content: "Tahoma"; }
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="trebuchet"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="trebuchet"]::before { font-family: "Trebuchet MS", Helvetica, sans-serif; content: "Trebuchet MS"; }
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="times-new-roman"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="times-new-roman"]::before { font-family: "Times New Roman", Times, serif; content: "Times New Roman"; }
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="georgia"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="georgia"]::before { font-family: Georgia, serif; content: "Georgia"; }
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="roboto"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="roboto"]::before { font-family: Roboto, Arial, sans-serif; content: "Roboto"; }
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="open-sans"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="open-sans"]::before { font-family: "Open Sans", Arial, sans-serif; content: "Open Sans"; }
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="lato"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="lato"]::before { font-family: Lato, Arial, sans-serif; content: "Lato"; }
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="montserrat"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="montserrat"]::before { font-family: Montserrat, Arial, sans-serif; content: "Montserrat"; }
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="poppins"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="poppins"]::before { font-family: Poppins, Arial, sans-serif; content: "Poppins"; }

/* Show sizes as labels without the 'pt' suffix, or keep itâ€”your call */
:root { --size-label-suffix: "pt"; }
.ql-snow .ql-picker.ql-size .ql-picker-item::before,
.ql-snow .ql-picker.ql-size .ql-picker-label::before {
  content: attr(data-value) var(--size-label-suffix);
}

/* Line-height dropdown shows the numeric value */
.ql-snow .ql-picker.ql-lineheight .ql-picker-item::before,
.ql-snow .ql-picker.ql-lineheight .ql-picker-label::before {
  content: attr(data-value);
}

/* Optional: ensure chosen font applies inside editor content */
.ql-editor { line-height: 1.5; }
/* Ensure picker items have consistent height to avoid overlap */
.ql-snow .ql-picker.ql-lineheight .ql-picker-item,
.ql-snow .ql-picker.ql-lineheight .ql-picker-label { line-height: 1.2; }
